#!/bin/bash

# VPS Auto Setup Script
# Script t·ª± ƒë·ªông c√†i ƒë·∫∑t v√† c·∫•u h√¨nh VPS t·ª´ ƒë·∫ßu

# M√†u s·∫Øc
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m'

# Log file
LOG_FILE="/var/log/vps_setup.log"

# H√†m log
log() {
    echo "$(date '+%Y-%m-%d %H:%M:%S') - $1" >> $LOG_FILE
    echo -e "$1"
}

# H√†m hi·ªÉn th·ªã banner
show_banner() {
    clear
    echo -e "${PURPLE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${PURPLE}‚ïë                VPS AUTO SETUP v1.0                      ‚ïë${NC}"
    echo -e "${PURPLE}‚ïë            Script c√†i ƒë·∫∑t VPS t·ª± ƒë·ªông                   ‚ïë${NC}"
    echo -e "${PURPLE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}"
    echo ""
}

# H√†m c·∫≠p nh·∫≠t h·ªá th·ªëng
update_system() {
    log "${BLUE}=== B∆Ø·ªöC 1: C·∫¨P NH·∫¨T H·ªÜ TH·ªêNG ===${NC}"
    
    log "ƒêang c·∫≠p nh·∫≠t danh s√°ch g√≥i..."
    apt update -y >> $LOG_FILE 2>&1
    
    log "ƒêang n√¢ng c·∫•p h·ªá th·ªëng..."
    apt upgrade -y >> $LOG_FILE 2>&1
    
    log "${GREEN}‚úì ƒê√£ c·∫≠p nh·∫≠t h·ªá th·ªëng th√†nh c√¥ng${NC}"
}

# H√†m c√†i ƒë·∫∑t c√°c g√≥i c·∫ßn thi·∫øt
install_essentials() {
    log "${BLUE}=== B∆Ø·ªöC 2: C√ÄI ƒê·∫∂T C√ÅC G√ìI C·∫¶N THI·∫æT ===${NC}"
    
    packages=(
        "curl" "wget" "git" "unzip" "zip"
        "htop" "nano" "vim" "tree"
        "software-properties-common" "apt-transport-https"
        "ca-certificates" "gnupg" "lsb-release"
        "ufw" "fail2ban"
    )
    
    log "ƒêang c√†i ƒë·∫∑t c√°c g√≥i c∆° b·∫£n..."
    for package in "${packages[@]}"; do
        log "C√†i ƒë·∫∑t $package..."
        apt install -y $package >> $LOG_FILE 2>&1
    done
    
    log "${GREEN}‚úì ƒê√£ c√†i ƒë·∫∑t c√°c g√≥i c·∫ßn thi·∫øt${NC}"
}

# H√†m c√†i ƒë·∫∑t Nginx
install_nginx() {
    log "${BLUE}=== B∆Ø·ªöC 3: C√ÄI ƒê·∫∂T NGINX ===${NC}"
    
    apt install -y nginx >> $LOG_FILE 2>&1
    systemctl start nginx
    systemctl enable nginx
    
    # T·∫°o c·∫•u h√¨nh m·∫∑c ƒë·ªãnh t√πy ch·ªânh
    cat > /var/www/html/index.html << 'EOF'
<!DOCTYPE html>
<html>
<head>
    <title>VPS Setup Th√†nh C√¥ng!</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            color: white;
        }
        .container {
            text-align: center;
            background: rgba(255,255,255,0.1);
            padding: 40px;
            border-radius: 20px;
            backdrop-filter: blur(10px);
            box-shadow: 0 8px 32px rgba(0,0,0,0.1);
        }
        h1 {
            font-size: 3em;
            margin-bottom: 20px;
            animation: fadeInUp 1s ease-out;
        }
        p {
            font-size: 1.2em;
            margin-bottom: 15px;
            animation: fadeInUp 1s ease-out 0.2s both;
        }
        .info {
            background: rgba(255,255,255,0.2);
            padding: 20px;
            border-radius: 10px;
            margin-top: 30px;
            animation: fadeInUp 1s ease-out 0.4s both;
        }
        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }
        .emoji {
            font-size: 2em;
            margin: 10px;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>üéâ VPS Setup Th√†nh C√¥ng!</h1>
        <p>M√°y ch·ªß c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t v√† c·∫•u h√¨nh th√†nh c√¥ng!</p>
        <p><span class="emoji">üöÄ</span> Nginx ƒëang ch·∫°y</p>
        <p><span class="emoji">üîí</span> B·∫£o m·∫≠t ƒë√£ ƒë∆∞·ª£c thi·∫øt l·∫≠p</p>
        <p><span class="emoji">‚ö°</span> S·∫µn s√†ng ƒë·ªÉ s·ª≠ d·ª•ng</p>
        
        <div class="info">
            <h3>Th√¥ng tin h·ªá th·ªëng:</h3>
            <p>Th·ªùi gian c√†i ƒë·∫∑t: <strong id="datetime"></strong></p>
            <p>IP Server: <strong id="server-ip"></strong></p>
        </div>
    </div>

    <script>
        // Hi·ªÉn th·ªã th·ªùi gian hi·ªán t·∫°i
        document.getElementById('datetime').textContent = new Date().toLocaleString('vi-VN');
        
        // L·∫•y IP c·ªßa server (s·∫Ω hi·ªÉn th·ªã IP client trong tr∆∞·ªùng h·ª£p n√†y)
        fetch('https://api.ipify.org?format=json')
            .then(response => response.json())
            .then(data => {
                document.getElementById('server-ip').textContent = data.ip;
            })
            .catch(() => {
                document.getElementById('server-ip').textContent = 'Kh√¥ng th·ªÉ l·∫•y IP';
            });
    </script>
</body>
</html>
EOF
    
    log "${GREEN}‚úì ƒê√£ c√†i ƒë·∫∑t Nginx th√†nh c√¥ng${NC}"
}

# H√†m c√†i ƒë·∫∑t SSL (Certbot)
install_ssl() {
    log "${BLUE}=== B∆Ø·ªöC 4: C√ÄI ƒê·∫∂T CERTBOT (SSL) ===${NC}"
    
    apt install -y certbot python3-certbot-nginx >> $LOG_FILE 2>&1
    
    # T·∫°o cron job ƒë·ªÉ t·ª± ƒë·ªông gia h·∫°n SSL
    (crontab -l 2>/dev/null; echo "0 12 * * * /usr/bin/certbot renew --quiet") | crontab -
    
    log "${GREEN}‚úì ƒê√£ c√†i ƒë·∫∑t Certbot th√†nh c√¥ng${NC}"
}

# H√†m thi·∫øt l·∫≠p firewall
setup_firewall() {
    log "${BLUE}=== B∆Ø·ªöC 5: THI·∫æT L·∫¨P FIREWALL ===${NC}"
    
    # Reset UFW
    ufw --force reset >> $LOG_FILE 2>&1
    
    # C·∫•u h√¨nh m·∫∑c ƒë·ªãnh
    ufw default deny incoming >> $LOG_FILE 2>&1
    ufw default allow outgoing >> $LOG_FILE 2>&1
    
    # Cho ph√©p SSH, HTTP, HTTPS
    ufw allow ssh >> $LOG_FILE 2>&1
    ufw allow 'Nginx Full' >> $LOG_FILE 2>&1
    
    # K√≠ch ho·∫°t UFW
    ufw --force enable >> $LOG_FILE 2>&1
    
    log "${GREEN}‚úì ƒê√£ thi·∫øt l·∫≠p firewall th√†nh c√¥ng${NC}"
}

# H√†m c·∫•u h√¨nh Fail2Ban
setup_fail2ban() {
    log "${BLUE}=== B∆Ø·ªöC 6: C·∫§U H√åNH FAIL2BAN ===${NC}"
    
    # T·∫°o file c·∫•u h√¨nh jail.local
    cat > /etc/fail2ban/jail.local << 'EOF'
[DEFAULT]
# Th·ªùi gian c·∫•m (gi√¢y)
bantime = 3600

# Th·ªùi gian theo d√µi (gi√¢y)
findtime = 600

# S·ªë l·∫ßn th·ª≠ t·ªëi ƒëa
maxretry = 5

# Ignore local IPs
ignoreip = 127.0.0.1/8 ::1

[sshd]
enabled = true
port = ssh
filter = sshd
logpath = /var/log/auth.log
maxretry = 3
bantime = 7200

[nginx-http-auth]
enabled = true
filter = nginx-http-auth
logpath = /var/log/nginx/error.log
maxretry = 3

[nginx-noscript]
enabled = true
port = http,https
filter = nginx-noscript
logpath = /var/log/nginx/access.log
maxretry = 6

[nginx-badbots]
enabled = true
port = http,https
filter = nginx-badbots
logpath = /var/log/nginx/access.log
maxretry = 2
EOF

    # Kh·ªüi ƒë·ªông l·∫°i Fail2Ban
    systemctl restart fail2ban
    systemctl enable fail2ban
    
    log "${GREEN}‚úì ƒê√£ c·∫•u h√¨nh Fail2Ban th√†nh c√¥ng${NC}"
}

# H√†m t·ªëi ∆∞u h√≥a h·ªá th·ªëng
optimize_system() {
    log "${BLUE}=== B∆Ø·ªöC 7: T·ªêI ∆ØU H√ìA H·ªÜ TH·ªêNG ===${NC}"
    
    # TƒÉng gi·ªõi h·∫°n file descriptors
    cat >> /etc/security/limits.conf << 'EOF'
* soft nofile 65535
* hard nofile 65535
root soft nofile 65535
root hard nofile 65535
EOF

    # T·ªëi ∆∞u kernel parameters
    cat >> /etc/sysctl.conf << 'EOF'
# Network tuning
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216
net.ipv4.tcp_rmem = 4096 87380 16777216
net.ipv4.tcp_wmem = 4096 65536 16777216
net.ipv4.tcp_congestion_control = bbr
net.core.default_qdisc = fq

# Security
net.ipv4.conf.default.rp_filter = 1
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.all.accept_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.all.accept_source_route = 0
net.ipv6.conf.all.accept_source_route = 0
EOF

    sysctl -p >> $LOG_FILE 2>&1
    
    log "${GREEN}‚úì ƒê√£ t·ªëi ∆∞u h√≥a h·ªá th·ªëng${NC}"
}

# H√†m t·∫°o th∆∞ m·ª•c v√† quy·ªÅn
setup_directories() {
    log "${BLUE}=== B∆Ø·ªöC 8: THI·∫æT L·∫¨P TH∆Ø M·ª§C ===${NC}"
    
    # T·∫°o th∆∞ m·ª•c backup
    mkdir -p /root/backups
    mkdir -p /root/scripts
    mkdir -p /var/log/vps-manager
    
    # Thi·∫øt l·∫≠p quy·ªÅn cho th∆∞ m·ª•c web
    chown -R www-data:www-data /var/www/
    chmod -R 755 /var/www/
    
    log "${GREEN}‚úì ƒê√£ thi·∫øt l·∫≠p th∆∞ m·ª•c${NC}"
}

# H√†m c√†i ƒë·∫∑t VPS Manager
install_vps_manager() {
    log "${BLUE}=== B∆Ø·ªöC 9: C√ÄI ƒê·∫∂T VPS MANAGER ===${NC}"
    
    # T·∫£i script VPS Manager (gi·∫£ s·ª≠ ƒë√£ c√≥)
    cat > /root/scripts/vps-manager.sh << 'EOF'
# VPS Manager script s·∫Ω ƒë∆∞·ª£c ƒë·∫∑t ·ªü ƒë√¢y
# (N·ªôi dung c·ªßa script VPS Manager ƒë√£ t·∫°o ·ªü tr∆∞·ªõc)
EOF
    
    chmod +x /root/scripts/vps-manager.sh
    
    # T·∫°o alias ƒë·ªÉ ch·∫°y d·ªÖ d√†ng
    echo "alias vps-manager='/root/scripts/vps-manager.sh'" >> /root/.bashrc
    
    log "${GREEN}‚úì ƒê√£ c√†i ƒë·∫∑t VPS Manager${NC}"
}

# H√†m t·∫°o th√¥ng tin h·ªá th·ªëng
create_system_info() {
    log "${BLUE}=== B∆Ø·ªöC 10: T·∫†O TH√îNG TIN H·ªÜ TH·ªêNG ===${NC}"
    
    cat > /root/system-info.txt << EOF
=== TH√îNG TIN VPS SETUP ===
Th·ªùi gian c√†i ƒë·∫∑t: $(date)
H·ªá ƒëi·ªÅu h√†nh: $(lsb_release -d | awk -F'\t' '{print $2}')
Kernel: $(uname -r)
IP Public: $(curl -s https://api.ipify.org)

=== D·ªäCH V·ª§ ƒê√É C√ÄI ƒê·∫∂T ===
‚úì Nginx - Web Server
‚úì Certbot - SSL/TLS Certificates
‚úì UFW - Firewall
‚úì Fail2Ban - Intrusion Prevention
‚úì VPS Manager - Management Tool

=== C√ÅCH S·ª¨ D·ª§NG ===
1. Ch·∫°y VPS Manager: /root/scripts/vps-manager.sh
2. Ho·∫∑c d√πng alias: vps-manager
3. Xem log setup: tail -f /var/log/vps_setup.log
4. Xem tr·∫°ng th√°i firewall: ufw status
5. Xem tr·∫°ng th√°i fail2ban: fail2ban-client status

=== TH√îNG TIN B·∫¢O M·∫¨T ===
- Firewall ƒë√£ ƒë∆∞·ª£c b·∫≠t
- Fail2Ban ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh
- H·ªá th·ªëng ƒë√£ ƒë∆∞·ª£c t·ªëi ∆∞u h√≥a

=== B∆Ø·ªöC TI·∫æP THEO ===
1. Th√™m domain v√† c√†i ƒë·∫∑t SSL
2. C√†i ƒë·∫∑t database (MySQL/PostgreSQL)
3. C√†i ƒë·∫∑t m√¥i tr∆∞·ªùng ph√°t tri·ªÉn (PHP/Node.js/Python)
4. Thi·∫øt l·∫≠p backup t·ª± ƒë·ªông

Ch√∫c b·∫°n s·ª≠ d·ª•ng VPS th√†nh c√¥ng! üöÄ
EOF
    
    log "${GREEN}‚úì ƒê√£ t·∫°o file th√¥ng tin h·ªá th·ªëng${NC}"
}

# H√†m d·ªçn d·∫πp
cleanup() {
    log "${BLUE}=== B∆Ø·ªöC 11: D·ªåN D·∫∏P ===${NC}"
    
    apt autoremove -y >> $LOG_FILE 2>&1
    apt autoclean >> $LOG_FILE 2>&1
    
    log "${GREEN}‚úì ƒê√£ d·ªçn d·∫πp h·ªá th·ªëng${NC}"
}

# H√†m hi·ªÉn th·ªã k·∫øt qu·∫£
show_results() {
    clear
    show_banner
    
    echo -e "${GREEN}üéâ THI·∫æT L·∫¨P VPS HO√ÄN T·∫§T! üéâ${NC}\n"
    
    echo -e "${CYAN}‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê${NC}"
    echo -e "${CYAN}‚îÇ                     K·∫æT QU·∫¢ SETUP                       ‚îÇ${NC}"
    echo -e "${CYAN}‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§${NC}"
    echo -e "${GREEN}‚îÇ ‚úì H·ªá th·ªëng ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t                            ‚îÇ${NC}"
    echo -e "${GREEN}‚îÇ ‚úì Nginx ƒë√£ ƒë∆∞·ª£c c√†i ƒë·∫∑t v√† c·∫•u h√¨nh                    ‚îÇ${NC}"
    echo -e "${GREEN}‚îÇ ‚úì SSL/TLS (Certbot) ƒë√£ s·∫µn s√†ng                        ‚îÇ${NC}"
    echo -e "${GREEN}‚îÇ ‚úì Firewall (UFW) ƒë√£ ƒë∆∞·ª£c b·∫≠t                           ‚îÇ${NC}"
    echo -e "${GREEN}‚îÇ ‚úì Fail2Ban ƒë√£ ƒë∆∞·ª£c c·∫•u h√¨nh                            ‚îÇ${NC}"
    echo -e "${GREEN}‚îÇ ‚úì H·ªá th·ªëng ƒë√£ ƒë∆∞·ª£c t·ªëi ∆∞u h√≥a                          ‚îÇ${NC}"
    echo -e "${GREEN}‚îÇ ‚úì VPS Manager ƒë√£ s·∫µn s√†ng s·ª≠ d·ª•ng                      ‚îÇ${NC}"
    echo -e "${CYAN}‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§${NC}"
    echo -e "${YELLOW}‚îÇ                   TH√îNG TIN QUAN TR·ªåNG                  ‚îÇ${NC}"
    echo -e "${CYAN}‚îú‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î§${NC}"
    echo -e "${BLUE}‚îÇ üåê Website test: http://$(curl -s https://api.ipify.org)${NC}"
    echo -e "${BLUE}‚îÇ üõ†Ô∏è  VPS Manager: /root/scripts/vps-manager.sh           ‚îÇ${NC}"
    echo -e "${BLUE}‚îÇ üìã Th√¥ng tin chi ti·∫øt: /root/system-info.txt            ‚îÇ${NC}"
    echo -e "${BLUE}‚îÇ üìù Log setup: /var/log/vps_setup.log                   ‚îÇ${NC}"
    echo -e "${CYAN}‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò${NC}"
    
    echo -e "\n${YELLOW}B∆Ø·ªöC TI·∫æP THEO:${NC}"
    echo -e "1. Ch·∫°y VPS Manager ƒë·ªÉ th√™m domain: ${GREEN}vps-manager${NC}"
    echo -e "2. ƒê·ªçc h∆∞·ªõng d·∫´n chi ti·∫øt: ${GREEN}cat /root/system-info.txt${NC}"
    echo -e "3. Ki·ªÉm tra website: ${GREEN}http://$(curl -s https://api.ipify.org)${NC}"
    
    echo -e "\n${PURPLE}C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng VPS Auto Setup! üöÄ${NC}\n"
}

# H√†m main
main() {
    # Ki·ªÉm tra quy·ªÅn root
    if [[ $EUID -ne 0 ]]; then
        echo -e "${RED}Script n√†y c·∫ßn ch·∫°y v·ªõi quy·ªÅn root!${NC}"
        echo -e "S·ª≠ d·ª•ng: ${YELLOW}sudo $0${NC}"
        exit 1
    fi
    
    # Ki·ªÉm tra h·ªá ƒëi·ªÅu h√†nh
    if ! grep -q "Ubuntu\|Debian" /etc/os-release; then
        echo -e "${RED}Script n√†y ch·ªâ h·ªó tr·ª£ Ubuntu v√† Debian!${NC}"
        exit 1
    fi
    
    show_banner
    
    echo -e "${YELLOW}Chu·∫©n b·ªã thi·∫øt l·∫≠p VPS t·ª± ƒë·ªông...${NC}"
    echo -e "${BLUE}Qu√° tr√¨nh n√†y s·∫Ω m·∫•t kho·∫£ng 5-10 ph√∫t.${NC}"
    echo -e "${CYAN}T·∫•t c·∫£ log s·∫Ω ƒë∆∞·ª£c l∆∞u t·∫°i: $LOG_FILE${NC}\n"
    
    read -p "Nh·∫•n Enter ƒë·ªÉ b·∫Øt ƒë·∫ßu ho·∫∑c Ctrl+C ƒë·ªÉ h·ªßy..."
    
    # Th·ª±c hi·ªán c√°c b∆∞·ªõc setup
    update_system
    install_essentials
    install_nginx
    install_ssl
    setup_firewall
    setup_fail2ban
    optimize_system
    setup_directories
    install_vps_manager
    create_system_info
    cleanup
    
    # Hi·ªÉn th·ªã k·∫øt qu·∫£
    show_results
}

# Ch·∫°y script
main "$@"
